@model ProyectoDesviaciones.Models.DesviacionModel

@{
    ViewBag.Title = "Details";
}


@Html.AntiForgeryToken()


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdDesviacion)
    <br /> <br />
    <div class="panel panel-primary" data-sortable-id="ui-widget-10">
        <div class="panel-heading">
            <h4 class="panel-title">Desviacion </h4>
        </div>
        <div class="panel-body">
            <div class="form-group">

                <div class="col-md-2">
                    <label>Type Deviation</label>
                    @Html.EditorFor(model => model.TipoDesviacion, new { htmlAttributes = new { @class = "form-control" , @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.IdTipoDesviacion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <label>Customer</label><br />
                    @Html.EditorFor(model => model.Cliente, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <label>Part Number</label>
                    @Html.EditorFor(model => model.NumeroDeParte, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.IdComponente, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <label>Deviation No</label>
                    @Html.EditorFor(model => model.NumeroDesviacion, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.NumeroDesviacion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <label>Date</label>
                    @Html.EditorFor(model => model.FechaDesviacion, new { htmlAttributes = new { @class = "form-control", @id = "FechaDesviacion", @readonly = "", @Value = Model.FechaDesviacion.ToString("dd/MMMM/yyyy")} })
                    @Html.ValidationMessageFor(model => model.FechaDesviacion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-lg-2">
                    <label>Required By</label>
                    @Html.EditorFor(model => model.RequeridoPor, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.RequeridoPor, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-12" style="text-align:center; text-decoration:underline; color:black;"><hr style="border-color:black;" /> <strong style="font-size:20px;"> Deviation Request Description:</strong> </div>
                <div class="col-md-offset-0 col-md-3 ">
                    <br />
                    <label> Correct Component/ Process</label> <br />
                    @Html.TextAreaFor(model => model.DescripcionProcesoCorrecto, new { @class = "form-control", @cols = "20", @rows = "5", @readonly = "" })
                    @Html.ValidationMessageFor(model => model.DescripcionProcesoCorrecto, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-0 col-md-3 ">
                    <br />
                    <label> Proposed Component/Condition</label> <br />
                    @Html.TextAreaFor(model => model.DescripcionCondicionComponente, new { @class = "form-control", @cols = "20", @rows = "5", @readonly = "" })
                    @Html.ValidationMessageFor(model => model.DescripcionCondicionComponente, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-0 col-md-3 ">
                    <br />
                    <label> Reason for Deviation</label> <br />
                    @Html.TextAreaFor(model => model.DescripcionRazonDesviacion, new { @class = "form-control", @cols = "20", @rows = "5", @readonly = "" })
                    @Html.ValidationMessageFor(model => model.DescripcionRazonDesviacion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-0 col-md-3 ">
                    <br />
                    <label> Action Plan</label> <br />
                    @Html.TextAreaFor(model => model.DescripcionPlanDeAccion, new { @class = "form-control", @cols = "20", @rows = "5", @readonly = "" })
                    @Html.ValidationMessageFor(model => model.DescripcionPlanDeAccion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-0 col-md-4 ">
                    <br />
                    <label> Responsible</label> <br />
                    @Html.EditorFor(model => model.DescripcionResponsable, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.DescripcionResponsable, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-0 col-md-4 ">
                    <br />
                    <label> Date</label> <br />
                    @Html.EditorFor(model => model.DescripcionFechaDesviacion, new { htmlAttributes = new { @class = "form-control" , @Value = Model.DescripcionFechaDesviacion.ToString("dd/MMMM/yyyy") } })
                    @Html.ValidationMessageFor(model => model.DescripcionFechaDesviacion, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-12"><hr style="border-color:black;" /> </div>
                <div class="col-md-offset-0 col-md-6 ">
                    <br />
                    <label> Related Documents</label> <br />
                    @Html.DropDownListFor(x => x.ListaDocumentos, ViewBag.ListaDocumento as List<SelectListItem>, "", new { @class = "form-control", @multiple = "multiple", @style = "width:100%;" })
                    <br />
                </div>
                <div class="col-md-offset-0 col-md-6 ">
                    <br />
                    <label> Involved Areas</label> <br />
                    @Html.DropDownListFor(x => x.ListaAreas, ViewBag.ListaArea as List<SelectListItem>, "", new { @class = "form-control", @multiple = "multiple", @style = "width:100%;" })
                    <br /> <br />
                </div>
                <div class="col-lg-12"><hr style="border-color:black;" /> </div>

                <div class="col-lg-12"><label> Identification of parts produced with new acceptance criterias</label></div>
                <div class="col-md-2" style="width:10%;">
                 <div class="col-lg-6">@Html.RadioButtonFor(model => model.CriterioAceptado, "true", new { @class = "form-control", @disabled = "disabled" })@Html.Label(" Yes")&nbsp;</div>  
                 <div class="col-lg-6">@Html.RadioButtonFor(model => model.CriterioAceptado, "false", new { @class = "form-control", @disabled = "disabled" })@Html.Label(" No")</div>   
                    @Html.ValidationMessageFor(model => model.CriterioAceptado, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10 ">
                    @Html.TextAreaFor(model => model.DetalleCriterioAceptado, new { @class = "form-control", @style = "max-width:100%; width:100%", @readonly = "" })
                    @Html.ValidationMessageFor(model => model.DetalleCriterioAceptado, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 ">
                    <br />
                    <label> Expiration</label> <br />
                    @Html.EditorFor(model => model.Vencimiento, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.Vencimiento, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 ">
                    <br />
                    <label> Expiration Date</label> <br />
                    @Html.EditorFor(model => model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control", @readonly = "" , @Value = Model.FechaVencimiento.ToString("dd/MMMM/yyyy") } })
                    @Html.ValidationMessageFor(model => model.FechaVencimiento, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 ">
                    <br />
                    <label> Quantity Pieces</label> <br />
                    @Html.EditorFor(model => model.CantidadDePiezas, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.CantidadDePiezas, "", new { @class = "text-danger" })
                    <br />
                </div>
                <div class="form-group">
                    <div class="col-md-offset-8 col-md-4">
                        <a class="btn btn btn-primary" href="/Desviaciones/Index">Volver al Listado de Desviaciones</a>
                        <input onclick="Aprobar()" value="Aprobar" class="btn btn-warning" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @*<link rel="stylesheet" href="/resources/demos/style.css">*@

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var doc = [];
            @foreach(var itm in Model.SelectListDocumentos)
                {
                    <text>doc.push('@itm')</text>

                }
            var area = [];
            @foreach(var itm in Model.SelectListAreas)
                {
                    <text>area.push('@itm')</text>
                }

            $("#ListaAreas").val(area).select2({ disabled: true });
            $("#ListaDocumentos").val(doc).select2({ disabled: true });

                //$("#IDDocumentos").select2({
                //    placeholder: "Seleccione los Documentos"
                //});

                //Obtener los Documentos Relacionados
                @*$.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDocumentosRelacionados","Desviaciones")",
                    success: function (data) {
                        $.each(data, function (i, dt) {
                            $('#IDDocumentos').append('<option value="' + dt.Id + '">' + dt.documento + '</option>');
                        });
                    }
                });*@

            });
    </script>
    <script>
        $("#FechaDesviacion").datepicker({
                dateFormat: 'dd/MM/yy',
                disabled: true
            });
        $("#DescripcionFechaDesviacion").datepicker({
            dateFormat: 'dd/MM/yy',
              disabled: true
            });
        $("#FechaVencimiento").datepicker({
                dateFormat: 'dd/MM/yy',
                disabled: true
            });

        function Aprobar()
        {
            $.ajax({
                url: "@Url.Action("Aprobar","Desviaciones")",
                type: "GET",
                success: function (data) {
                    if (data) {
                        swal('Se aprobo desviacion');
                    }
                    else {
                        swal('Se debe seguir el orden de aprobacion');
                    }
                },
                error: function (error){
                    console.log(error);
                }
            });
        }
    </script>
}