@model ProyectoDesviaciones.BD.DocumentosRelacionados

@{
    ViewBag.Title = "Create";
}

<h2>Crear Documentos Relacionados</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                swal('@(TempData["Message"] as string)');
            }
        </script>
    }

    <div class="form-horizontal">
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <label>Descripcion</label>
                @*Esto es mas que todo esetico, la forma como se mostrara la etiqueta*@
                @*@Html.LabelFor(model => model.DescripcionDocumentosRelacionados, htmlAttributes: new { @class = "control-label col-md-2" })*@  @*Si no queres que salga el mismo nombre que esta en la tabla comentas esto*@

                @Html.EditorFor(model => model.DescripcionDocumentosRelacionados, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescripcionDocumentosRelacionados, "", new { @class = "text-danger" })
            </div>
        </div>

        @*-------------Esto no se muestra porque solo se usa para eliminar los registros en teoria, pero en realidad lo que se hace es mostrar los registros activos.*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.EstadoDocumentoRelacionado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EstadoDocumentoRelacionado)
                        @Html.ValidationMessageFor(model => model.EstadoDocumentoRelacionado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-0 col-md-10">
                <a class="btn btn-sm btn-primary" href="/DocumentosRelacionados/Index">Listado de documentos</a>
                <input type="submit" value="Crear" class="btn btn-sm btn-success" />
            </div>
        </div>
    </div>

}

@*<div>
    @Html.ActionLink("Back to List", "Index")       ----- El boton que agregue arriba es esto mismo, solo que aqui se hace con un link y arriba con un button
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
